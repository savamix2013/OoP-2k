class Author:
    def __init__(self, name, birth_year):
        self.name = name
        self.birth_year = birth_year

    def get_info(self):
        return f'{self.name} ({self.birth_year})'


class Book:
    def __init__(self, title, year, annotation, author):
        self.title = title
        self.year = year
        self.annotation = annotation
        self.author = author

    def get_info(self):
        info = f'{self.title} ({self.year}) by {self.author.get_info()}'
        if self.annotation:
            info += f'\nAnnotation: {self.annotation}'
        return info


class Library:
    def __init__(self, name):
        self.name = name
        self.books = []

    def add_book(self, book):
        if not any(b.title == book.title and b.author.name == book.author.name for b in self.books):
            self.books.append(book)

    def list_books(self):
        return [book.get_info() for book in self.books]

    def find_books_by_author(self, author_name):
        return [book.get_info() for book in self.books if book.author.name == author_name]
    
    def search_books_by_year(self, year):
        return [book.get_info() for book in self.books if book.year == year]

    def search_books_by_keywords(self, keywords):
        return [book.get_info() for book in self.books if any(keyword.lower() in book.title.lower() or 
                                                                      keyword.lower() in book.annotation.lower() for keyword in keywords)]




class Reader:
    def __init__(self, name):
        self.name = name
        self.rented_books = []

    def rent_book(self, book):
        if book not in self.rented_books:
            self.rented_books.append(book)

    def return_book(self, book):
        if book in self.rented_books:
            self.rented_books.remove(book)

    
# --- –¢–µ—Å—Ç—É—î–º–æ ---
author1 = Author("–Ü–≤–∞–Ω –§—Ä–∞–Ω–∫–æ", 1856)
author2 = Author("–õ–µ—Å—è –£–∫—Ä–∞—ó–Ω–∫–∞", 1871)
author3 = Author("–¢–∞—Ä–∞—Å –®–µ–≤—á–µ–Ω–∫–æ", 1814)
book1 = Book("–ó–∞—Ö–∞—Ä –ë–µ—Ä–∫—É—Ç", 1883, "–†–æ–º–∞–Ω –ø—Ä–æ –±–æ—Ä–æ—Ç—å–±—É —É–∫—Ä–∞—ó–Ω—Ü—ñ–≤ —ñ–∑ –∑–∞–≥–∞—Ä–±–Ω–∏–∫–∞–º–∏", author1)
book2 = Book("–õ—ñ—Å–æ–≤–∞ –ø—ñ—Å–Ω—è", 1911, "–ü–æ–µ–º–∞ –ø—Ä–æ –∫–æ—Ö–∞–Ω–Ω—è", author2)
book3 = Book("–ö–æ–±–∑–∞—Ä", 1840, "", author3)
library = Library("–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞")

library.add_book(book1)
library.add_book(book2)
library.add_book(book3)


print("üìö –ö–Ω–∏–≥–∏ –≤ –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ:")
print("\n".join(library.list_books()))

reader = Reader("–ü–µ—Ç—Ä–æ")
reader.rent_book(book1)
print("\nüìñ –û—Ä–µ–Ω–¥–æ–≤–∞–Ω—ñ –∫–Ω–∏–≥–∏:")
print("\n".join([b.get_info() for b in reader.rented_books]))

reader.return_book(book1)
print("\nüìñ –û—Ä–µ–Ω–¥–æ–≤–∞–Ω—ñ –∫–Ω–∏–≥–∏ –ø—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:")
print("\n".join([b.get_info() for b in reader.rented_books]) or "–ù–µ–º–∞—î –æ—Ä–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –∫–Ω–∏–≥.")

print("\nüîç –ü–æ—à—É–∫ –∫–Ω–∏–≥ –∑–∞ —Ä–æ–∫–æ–º:")
print("\n".join(library.search_books_by_year(1883)))

print("\nüîç –ü–æ—à—É–∫ –∫–Ω–∏–≥ –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ ('–ó–∞—Ö–∞—Ä', '–±–æ—Ä–æ—Ç—å–±–∞'):")
print("\n".join(library.search_books_by_keywords(["–ó–∞—Ö–∞—Ä", "–±–æ—Ä–æ—Ç—å–±–∞"])))

